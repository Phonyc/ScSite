let deriveesStorage = new Map([
    // ["((405 - x) * (195 - x) * (27 - x) * (166 - x) * (331 - x) * (-236 - x) * (-181 - x)) / (100000000000*1280)", "((((((2 * x - 600) * (27 - x) + (x - 405) * (195 - x)) * (166 - x) + (x - 405) * (195 - x) * (27 - x)) * (331 - x) + (x - 405) * (195 - x) * (27 - x) * (166 - x)) * (-x - 236) + (x - 405) * (195 - x) * (27 - x) * (166 - x) * (331 - x)) * (-x - 181) + (x - 405) * (195 - x) * (27 - x) * (166 - x) * (331 - x) * (-x - 236)) / 1.28e+14"],
    // ["((-351 - x) * (346 - x) * (-312 - x) * (387 - x) * (253 - x) * (-211 - x) * (-183 - x) * (498 - x) * (365 - x)) / (100000000000000000*1280) - 217.5", "((((((((2 * x + 5) * (-x - 312) + (x + 351) * (346 - x)) * (387 - x) + (x + 351) * (346 - x) * (-x - 312)) * (253 - x) + (x + 351) * (346 - x) * (-x - 312) * (387 - x)) * (-x - 211) + (x + 351) * (346 - x) * (-x - 312) * (387 - x) * (253 - x)) * (-x - 183) + (x + 351) * (346 - x) * (-x - 312) * (387 - x) * (253 - x) * (-x - 211)) * (498 - x) + (x + 351) * (346 - x) * (-x - 312) * (387 - x) * (253 - x) * (-x - 211) * (-x - 183)) * (365 - x) + (x + 351) * (346 - x) * (-x - 312) * (387 - x) * (253 - x) * (-x - 211) * (-x - 183) * (498 - x)) * 3.0517578125e+10 / 3.90625e+30"],
    // ["((-457 - x) * (48 - x) * (219 - x) * (-103 - x) * (-468 - x) * (-253 - x) * (125 - x)) / (100000000000*1280) - 174", "((((((2 * x + 409) * (219 - x) + (x + 457) * (48 - x)) * (-x - 103) + (x + 457) * (48 - x) * (219 - x)) * (-x - 468) + (x + 457) * (48 - x) * (219 - x) * (-x - 103)) * (-x - 253) + (x + 457) * (48 - x) * (219 - x) * (-x - 103) * (-x - 468)) * (125 - x) + (x + 457) * (48 - x) * (219 - x) * (-x - 103) * (-x - 468) * (-x - 253)) / 1.28e+14"],
    // ["((259 - x) * (468 - x) * (-127 - x) * (-19 - x) * (192 - x)) / (1000000*1280) - 174", "((((2 * x - 727) * (-x - 127) + (x - 259) * (468 - x)) * (-x - 19) + (x - 259) * (468 - x) * (-x - 127)) * (192 - x) + (x - 259) * (468 - x) * (-x - 127) * (-x - 19)) / 1.28e+9"],
    // ["((350 - x) * (288 - x) * (427 - x) * (-111 - x) * (32 - x)) / (1000000*1280) - 174", "((((2 * x - 638) * (427 - x) + (x - 350) * (288 - x)) * (-x - 111) + (x - 350) * (288 - x) * (427 - x)) * (32 - x) + (x - 350) * (288 - x) * (427 - x) * (-x - 111)) / 1.28e+9"],
    // ["((-107 - x) * (-489 - x) * (-212 - x) * (-60 - x) * (-225 - x)) / (1000000*1280) - 174", "((((2 * x + 596) * (-x - 212) + (x + 107) * (-x - 489)) * (-x - 60) + (x + 107) * (-x - 489) * (-x - 212)) * (-x - 225) + (x + 107) * (-x - 489) * (-x - 212) * (-x - 60)) / 1.28e+9"],
    ["((130-x)*(50-x)*(-605-x)*(-250-x)*(500-x))/(20000000*1280)", "((((2 * x - 180) * (-x - 605) + (x - 130) * (50 - x)) * (-x - 250) + (x - 130) * (50 - x) * (-x - 605)) * (500 - x) + (x - 130) * (50 - x) * (-x - 605) * (-x - 250)) / 2.56e+10"],
    // ["((105 - x) * (321 - x) * (94 - x) * (-498 - x) * (-404 - x)) / (10000000*1280)", "((((2 * x - 426) * (94 - x) + (x - 105) * (321 - x)) * (-x - 498) + (x - 105) * (321 - x) * (94 - x)) * (-x - 404) + (x - 105) * (321 - x) * (94 - x) * (-x - 498)) / 1.28e+10"],
    ["((464 - x) * (112 - x) * (-255 - x) * (-446 - x) * (-21 - x) * (168 - x) * (-373 - x) * (-115 - x) * (427 - x) * (293 - x)) / (10000000000000000000*1280)", "(((((((((2 * x - 576) * (-x - 255) + (x - 464) * (112 - x)) * (-x - 446) + (x - 464) * (112 - x) * (-x - 255)) * (-x - 21) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446)) * (168 - x) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446) * (-x - 21)) * (-x - 373) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446) * (-x - 21) * (168 - x)) * (-x - 115) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446) * (-x - 21) * (168 - x) * (-x - 373)) * (427 - x) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446) * (-x - 21) * (168 - x) * (-x - 373) * (-x - 115)) * (293 - x) + (x - 464) * (112 - x) * (-x - 255) * (-x - 446) * (-x - 21) * (168 - x) * (-x - 373) * (-x - 115) * (427 - x)) * 3.814697265625e+12 / 4.8828125e+34"],
    ["0", "0"],
    // ["((314 - x) * (-476 - x) * (271 - x) * (-172 - x) * (201 - x) * (484 - x) * (264 - x) * (-460 - x) * (-350 - x)) / (100000000000000000*1280)", "((((((((2 * x + 162) * (271 - x) + (x - 314) * (-x - 476)) * (-x - 172) + (x - 314) * (-x - 476) * (271 - x)) * (201 - x) + (x - 314) * (-x - 476) * (271 - x) * (-x - 172)) * (484 - x) + (x - 314) * (-x - 476) * (271 - x) * (-x - 172) * (201 - x)) * (264 - x) + (x - 314) * (-x - 476) * (271 - x) * (-x - 172) * (201 - x) * (484 - x)) * (-x - 460) + (x - 314) * (-x - 476) * (271 - x) * (-x - 172) * (201 - x) * (484 - x) * (264 - x)) * (-x - 350) + (x - 314) * (-x - 476) * (271 - x) * (-x - 172) * (201 - x) * (484 - x) * (264 - x) * (-x - 460)) * 3.0517578125e+10 / 3.90625e+30"],
    // ["((-107 - x) * (-489 - x) * (-212 - x) * (-60 - x) * (-225 - x)) / (1000000*1280) - 174", "((((2 * x + 596) * (-x - 212) + (x + 107) * (-x - 489)) * (-x - 60) + (x + 107) * (-x - 489) * (-x - 212)) * (-x - 225) + (x + 107) * (-x - 489) * (-x - 212) * (-x - 60)) / 1.28e+9"],
]);

function getDerivee(fonction) {
    if (!deriveesStorage.has(fonction)) {
        updateDerivee(fonction);
    }
    return deriveesStorage.get(fonction);

}

function updateDerivee(fonction) {
    let drv = math.derivative(fonction, 'x').toString()
    console.log(`["${fonction}", "${drv}"],`)
    deriveesStorage.set(fonction, drv);

}

function getImage(x, fonction) {
    return eval(fonction);
}

function getTangImage(point, x, fonction, derivee = null) {
    let deri;
    if (derivee == null) {
        deri = eval(getDerivee(fonction).replaceAll("x", "point"));
    } else {
        deri = eval(derivee.replaceAll("x", "point"));
    }
    return deri * (x - point) + getImage(point, fonction);
}

// function to generate the hash of the actual timestamp
function getTimestamp(withrandom = false) {
    let date = new Date();
    if (withrandom) {
        return date.getTime().toString() + Math.random().toString();
    } else {
        return date.getTime().toString();

    }
}

function equationDroite(x1, y1, x2, y2) {
    let a = (y1 - y2) / (x1 - x2);
    let b = y1 - a * x1;
    return `${a}*x + ${b}`;
}